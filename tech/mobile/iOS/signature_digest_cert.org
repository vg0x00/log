* signature? digest? certification? 

** 什么是签名? 
   就是以签署者的身份确认签署的内容. 和现实中签字的作用一样.  数字签名作用和签名一致, 只是采用了数字
   手段来实现.

** 信息传递环节中药实现的几个诉求
   - 一致性: 发送方和接收方所最终持有的内容一致.
   - 私密性: 发送过程中保证不被第三方窃取.
   - 可追溯: 接受者能确认信息的发送者归属.

** 一致性, 放置信息被篡改 摘要(digest) hash
   [[file:img/hash.png]]

   问题是如何让接收者都到这个hash, 如果hash 随文发送, 又存在被中间人拦截, 篡改内容后, 重新计算hash
   继续发送.

   可以在发送方公开( 比如下载站点通过下载页公开下载文件的hash )
   接收者自行计算hash 后与发送者的公开hash 比较.

   如何放置hash 被篡改? 加密hash吧

** 私密: 防止被信息窃取 加密!
   
   加密分为了对称加密和非对称加密, 对称加密的方式在与非受信任者传递信息是不方便的, 没有哪个发送者将自己
   的密码告诉接收者. 非对称加密称为了更加的选择.

   发送者使用private key 将信息的hash 加密后的密文, 这个密文就被称为签
   名(signature) , 并连同信息一起发送.接收者通过public key 将收到的信
   息解密, 得到hash, 并计算收到的信息的hash, 将前后的hash 对比, 从而鉴
   定信息一致.

   内容私密? 加密!!!

   在前面的发送环节中, 将内容和hash一起使用private key 进行加密后传输. 这样既保证了内容私密传输和完整
   一致.

   这种加密方式依赖非对称加密, 如何确保接收方的获取的发送者制作的public key 完整一致? 如果接收者管理的
   public key 丢失或者被他人篡改, 那么man in the middle 攻击就可以实现. 哲学问题抛出, 如何证明我就
   是我? 实现方式很可笑, 通过第三方证明!! (同样也是通过数字签名的方式)

   这个第三方被称为certificate center,发送者向CA 提出申请证书申请, 同时提供自己的信息和公钥.
   CA 将申请者信息和公钥用自己的私钥加密后, 得到证书文件(通过非对称加密后的密文). 发送者在发送时连同证书
   一起投递给接收者,接收者如果在CA列表中找到了接收到的证书所属机构. 就用其公钥解密得到发送者公钥, 继而用
   这个公钥解密签名(signature) 得到摘要(digest) , 重新计算信息hash并比较后完成信息校验. 如果在CA列
   表中没有找到发送携带的证书所属机构, 那么证书被篡改或者不受信任的人或者机构颁发.

   懒得画图了
** 总结

   对基于内容每个bit 的单向计算结果就是摘要(digest), 对digest 通过私密
   加密后得到就是签名(signature), 第三方用自己的私钥将发送者公钥加密得
   到的就是证书(cert)

   摘要和非对称加密是信息安全可靠传递的法宝. 当然这个可靠并不是指传输可靠. 而是内容一致.
